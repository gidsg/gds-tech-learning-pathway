# Planning and estimating

### The developer's role

Developing skills and techniques to help estimate and measure the development effort and cost of building and maintaining
software is essential for developers. These skills are useful in informing decisions and guiding delivery.

Having good skills and techniques to estimate tasks feeds in to the work at various levels. Day to day, estimating on individual
stories helps us manage scope through a sprint. Estimating larger ongoing pieces of work over several sprints helps us better
plan our quarterly cycles. Estimating over quarters feeds in to our larger yearly roadmaps.

There are many ways to estimate tasks for sizing for time through to complexity. Each has advantages and disadvantages and it should
be up to each team to decide how best to estimate work.

### Junior level

You can estimate the complexity of implementing well defined stories in code bases that you are familiar with.

### Mid level

You understand the trade offs between various implementations of a solution within a project.

You estimate the complexity of various solutions to a story within a project.

You actively feed in to planning sessions and estimate complexity in terms of effort or time for stories in a sprint.

You understand and can identify technical challenges that might block a story up front.

You understand and can identify when stories rely on input from outside the team (e.g. user testing) and estimate appropriately.

You understand and can estimate complexity in code bases that you are less familiar with.

You can identify when there is not enough information to estimate a story successfully.

### Senior level

You understand the trade offs between various implementations for epics across multiple projects.

You can prioritise competing tasks based on the wider goals of the organisation.

You understand that often trade-offs introduce technical debt and know how to record and prioritise technical debt.

You actively help Delivery and Product Managers in planning (sprint and longer term).

You know how to estimate the teams delivery based on everyone's changing personal circumstances
(e.g. support and holiday schedules, training days, other commitments in the community etc)

You can identify blockers to stories and epics based on understanding of your team and other team's plans as well as
the wider organisations goals and priorities.

You identify when stories and epics have been scoped incorrectly and can understand when it's appropriate to curb the scope
of a piece of work and when it's appropriate to split the work in to maneagable chunks and spend more time on the task.
